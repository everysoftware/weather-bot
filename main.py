import json

import telebot
import requests

TG_TOKEN = 'TG_TOKEN'
OPEN_WEATHER_KEY = 'OPEN_WEATHER_TOKEN'

WELCOME_STR = '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç, —Å–æ–æ–±—â–∞—é—â–∏–π —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É!'
WEATHER_STR = '–ù–∞–ø–µ—á–∞—Ç–∞–π –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞.'
INFO_STR = "<b>–ü–æ–≥–æ–¥–∞ ({})</b>\n\n" +\
           "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {}¬∞C {}\n" +\
           "–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {}¬∞C {}\n" +\
           "–î–∞–≤–ª–µ–Ω–∏–µ: {} –º–º. —Ä—Ç. —Å—Ç.\n" +\
           "–í–ª–∞–∂–Ω–æ—Å—Ç—å: {}%\n"
NOT_FOUND_STR = '–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω!'
UNKNOWN_COMMAND_STR = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.'

bot = telebot.TeleBot(TG_TOKEN)


@bot.message_handler(commands=['start'])
def start_handler(msg):
    markup = telebot.types.ReplyKeyboardMarkup()
    markup.add(telebot.types.KeyboardButton('–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É'))
    bot.send_message(msg.chat.id, WELCOME_STR, reply_markup=markup)
    bot.register_next_step_handler(msg, menu_callback)


def menu_callback(msg):
    if msg.text == '–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É':
        weather_handler(msg)
    else:
        bot.send_message(msg.chat.id, UNKNOWN_COMMAND_STR)


@bot.message_handler(commands=['weather'])
def weather_handler(msg):
    bot.reply_to(msg, WEATHER_STR)
    bot.register_next_step_handler(msg, get_weather)


def get_temp_emoji(temp):
    if temp >= 30:
        return 'üî•'
    elif 10 <= temp < 30:
        return '‚òÄÔ∏è'
    elif -10 <= temp < 10:
        return 'üå¨'
    elif temp < -10:
        return '‚ùÑÔ∏è'


def parse_json(city, response):
    data = json.loads(response.text)
    return INFO_STR.format(city.capitalize(),
                           data['main']['temp'], get_temp_emoji(data['main']['temp']),
                           data['main']['feels_like'], get_temp_emoji(data['main']['feels_like']),
                           data['main']['pressure'],
                           data['main']['humidity']
                           )


def get_weather(msg):
    city = msg.text.strip().lower()
    response = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&APPID={OPEN_WEATHER_KEY}&units'
                            f'=metric')
    text = parse_json(city, response) if response.ok else NOT_FOUND_STR
    bot.reply_to(msg, text, parse_mode='html')


@bot.message_handler(commands=['author'])
def author_handler(msg):
    bot.send_message(msg.chat.id, '–ê–≤—Ç–æ—Ä –±–æ—Ç–∞: @ivanstasevich')


def main():
    bot.infinity_polling()


if __name__ == '__main__':
    main()
